name: MCP Integration Test

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'mcp.py'
      - 'llm_api.py'
      - 'redmine_api.py'
      - 'scripts/test_mcp.py'
      - '.github/workflows/mcp-integration-test.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'mcp.py'
      - 'llm_api.py'
      - 'redmine_api.py'
      - 'scripts/test_mcp.py'
      - '.github/workflows/mcp-integration-test.yml'
  workflow_dispatch:
    inputs:
      debug:
        description: 'Enable debug logging'
        required: false
        default: false
        type: boolean

jobs:
  test-mcp-integration:
    runs-on: ubuntu-latest
    
    env:
      CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    
    services:
      redmine:
        image: redmine:5.0
        ports:
          - 3000:3000
        env:
          REDMINE_SECRET_KEY_BASE: citest
          REDMINE_DB_MYSQL: db
          REDMINE_DB_PASSWORD: redmine
          REDMINE_DB_DATABASE: redmine
          REDMINE_DB_USERNAME: redmine
      
      db:
        image: mariadb:10.5
        env:
          MYSQL_ROOT_PASSWORD: redmine
          MYSQL_DATABASE: redmine
          MYSQL_USER: redmine
          MYSQL_PASSWORD: redmine
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask gunicorn pytest pytest-cov requests pyyaml responses flask-sqlalchemy
        
    - name: Wait for Redmine to start
      run: |
        echo "Waiting for Redmine to be ready..."
        attempt=0
        max_attempts=30
        until $(curl --output /dev/null --silent --head --fail http://localhost:3000); do
          if [ $attempt -ge $max_attempts ]; then
            echo "::error::Timed out waiting for Redmine to start"
            exit 1
          fi
          printf '.'
          attempt=$((attempt+1))
          sleep 5
        done
        echo "Redmine is up and running!"
        
    - name: Set up test environment
      run: |
        # Create test configuration
        echo "Creating credentials.yaml for testing..."
        cat > credentials.yaml << EOF
        redmine:
          url: http://localhost:3000
          api_key: ci_test_api_key
        
        claude:
          api_key: ${CLAUDE_API_KEY:-ci_test_claude_api_key}
        
        openai:
          api_key: ${OPENAI_API_KEY:-ci_test_openai_api_key}
        
        llm_provider: ${LLM_PROVIDER:-claude}
        
        rate_limit: 100
        EOF
        
        # Start the Flask app in the background
        echo "Starting Flask app for testing..."
        export FLASK_APP=main.py
        export FLASK_ENV=testing
        export FLASK_DEBUG=1
        nohup flask run --host=0.0.0.0 --port=5000 > flask.log 2>&1 &
        sleep 5  # Give the app time to start
        
        # Check if the app is running
        if curl --output /dev/null --silent --head --fail http://localhost:5000; then
          echo "Flask app is running."
        else
          echo "::error::Flask app failed to start"
          cat flask.log
          exit 1
        fi
        
    - name: Run MCP integration test
      run: |
        if [ -z "$CLAUDE_API_KEY" ] && [ -z "$OPENAI_API_KEY" ]; then
          echo "::warning::No API keys are set. Running in mock mode."
          python scripts/test_mcp.py --base-url=http://localhost:5000 --all --mock --verbose
        else
          python scripts/test_mcp.py --base-url=http://localhost:5000 --all --verbose
        fi
        
    - name: Upload app logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: mcp-integration-logs
        path: |
          flask.log
          logs/
          *.log
        retention-days: 7